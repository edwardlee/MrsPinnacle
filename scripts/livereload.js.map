{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/livereload.js","src/scripts/utils/ext.js"],"names":[],"mappings":"AAAA;ACAA;;AAEA;;;;AAEA,IAAI,eAAe,GAAG,YAAtB;AACA,IAAI,eAAe,GAAG,KAAtB;AACA,IAAI,UAAU,GAAG,IAAI,SAAJ,CAAc,UAAU,eAAV,GAA4B,eAA5B,GAA8C,aAA5D,CAAjB;;AAEA,UAAU,CAAC,OAAX,GAAqB,UAAU,KAAV,EAAiB;AACpC,EAAA,OAAO,CAAC,GAAR,CAAY,8BAAZ,EAA4C,KAA5C;AACD,CAFD;;AAIA,UAAU,CAAC,SAAX,GAAuB,UAAU,CAAV,EAAa;AAClC,MAAI,CAAC,CAAC,IAAN,EAAY;AACV,QAAI,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,CAAC,IAAb,CAAX;;AACA,QAAI,IAAI,IAAI,IAAI,CAAC,OAAL,KAAiB,QAA7B,EAAuC;AACrC,sBAAI,OAAJ,CAAY,MAAZ;AACD;AACF;AACF,CAPD;;;;;ACZA,IAAM,IAAI,GAAG,CACX,QADW,EAEX,WAFW,EAGX,eAHW,EAIX,UAJW,EAKX,cALW,EAMX,SANW,EAOX,WAPW,EAQX,QARW,EASX,WATW,EAUX,gBAVW,EAWX,SAXW,EAYX,MAZW,EAaX,MAbW,EAcX,eAdW,EAeX,YAfW,EAgBX,SAhBW,EAiBX,SAjBW,EAkBX,MAlBW,EAmBX,eAnBW,EAoBX,YApBW,EAqBX,SArBW,CAAb;;AAwBA,SAAS,SAAT,GAAsB;AACpB,MAAM,KAAK,GAAG,IAAd;;AAEA,EAAA,IAAI,CAAC,OAAL,CAAa,UAAU,GAAV,EAAe;AAE1B,IAAA,KAAK,CAAC,GAAD,CAAL,GAAa,IAAb;;AAEA,QAAI;AACF,UAAI,MAAM,CAAC,GAAD,CAAV,EAAiB;AACf,QAAA,KAAK,CAAC,GAAD,CAAL,GAAa,MAAM,CAAC,GAAD,CAAnB;AACD;AACF,KAJD,CAIE,OAAO,CAAP,EAAU,CAAE;;AAEd,QAAI;AACF,UAAI,MAAM,CAAC,GAAD,CAAV,EAAiB;AACf,QAAA,KAAK,CAAC,GAAD,CAAL,GAAa,MAAM,CAAC,GAAD,CAAnB;AACD;AACF,KAJD,CAIE,OAAO,CAAP,EAAU,CAAE;;AAEd,QAAI;AACF,UAAI,OAAO,CAAC,GAAD,CAAX,EAAkB;AAChB,QAAA,KAAK,CAAC,GAAD,CAAL,GAAa,OAAO,CAAC,GAAD,CAApB;AACD;AACF,KAJD,CAIE,OAAO,CAAP,EAAU,CAAE;;AACd,QAAI;AACF,MAAA,KAAK,CAAC,GAAN,GAAY,OAAO,CAAC,SAAR,CAAkB,GAAlB,CAAZ;AACD,KAFD,CAEE,OAAO,CAAP,EAAU,CAAE;AACf,GAxBD;;AA0BA,MAAI;AACF,QAAI,OAAO,IAAI,OAAO,CAAC,OAAvB,EAAgC;AAC9B,WAAK,OAAL,GAAe,OAAO,CAAC,OAAvB;AACD;AACF,GAJD,CAIE,OAAO,CAAP,EAAU,CAAE;;AAEd,MAAI;AACF,QAAI,OAAO,IAAI,OAAO,CAAC,aAAvB,EAAsC;AACpC,WAAK,aAAL,GAAqB,OAAO,CAAC,aAA7B;AACD;AACF,GAJD,CAIE,OAAO,CAAP,EAAU,CAAE;AAEf;;AAED,MAAM,CAAC,OAAP,GAAiB,IAAI,SAAJ,EAAjB","file":"livereload.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nimport ext from \"./utils/ext\";\n\nvar LIVERELOAD_HOST = 'localhost:';\nvar LIVERELOAD_PORT = 35729;\nvar connection = new WebSocket('ws://' + LIVERELOAD_HOST + LIVERELOAD_PORT + '/livereload');\n\nconnection.onerror = function (error) {\n  console.log('reload connection got error:', error);\n};\n\nconnection.onmessage = function (e) {\n  if (e.data) {\n    var data = JSON.parse(e.data);\n    if (data && data.command === 'reload') {\n      ext.runtime.reload();\n    }\n  }\n};","const apis = [\n  'alarms',\n  'bookmarks',\n  'browserAction',\n  'commands',\n  'contextMenus',\n  'cookies',\n  'downloads',\n  'events',\n  'extension',\n  'extensionTypes',\n  'history',\n  'i18n',\n  'idle',\n  'notifications',\n  'pageAction',\n  'runtime',\n  'storage',\n  'tabs',\n  'webNavigation',\n  'webRequest',\n  'windows',\n]\n\nfunction Extension () {\n  const _this = this\n\n  apis.forEach(function (api) {\n\n    _this[api] = null\n\n    try {\n      if (chrome[api]) {\n        _this[api] = chrome[api]\n      }\n    } catch (e) {}\n\n    try {\n      if (window[api]) {\n        _this[api] = window[api]\n      }\n    } catch (e) {}\n\n    try {\n      if (browser[api]) {\n        _this[api] = browser[api]\n      }\n    } catch (e) {}\n    try {\n      _this.api = browser.extension[api]\n    } catch (e) {}\n  })\n\n  try {\n    if (browser && browser.runtime) {\n      this.runtime = browser.runtime\n    }\n  } catch (e) {}\n\n  try {\n    if (browser && browser.browserAction) {\n      this.browserAction = browser.browserAction\n    }\n  } catch (e) {}\n\n}\n\nmodule.exports = new Extension();"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvc2NyaXB0cy9saXZlcmVsb2FkLmpzIiwic3JjL3NjcmlwdHMvdXRpbHMvZXh0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7O0FBRUE7Ozs7QUFFQSxJQUFJLGVBQWUsR0FBRyxZQUF0QjtBQUNBLElBQUksZUFBZSxHQUFHLEtBQXRCO0FBQ0EsSUFBSSxVQUFVLEdBQUcsSUFBSSxTQUFKLENBQWMsVUFBVSxlQUFWLEdBQTRCLGVBQTVCLEdBQThDLGFBQTVELENBQWpCOztBQUVBLFVBQVUsQ0FBQyxPQUFYLEdBQXFCLFVBQVUsS0FBVixFQUFpQjtBQUNwQyxFQUFBLE9BQU8sQ0FBQyxHQUFSLENBQVksOEJBQVosRUFBNEMsS0FBNUM7QUFDRCxDQUZEOztBQUlBLFVBQVUsQ0FBQyxTQUFYLEdBQXVCLFVBQVUsQ0FBVixFQUFhO0FBQ2xDLE1BQUksQ0FBQyxDQUFDLElBQU4sRUFBWTtBQUNWLFFBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFMLENBQVcsQ0FBQyxDQUFDLElBQWIsQ0FBWDs7QUFDQSxRQUFJLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTCxLQUFpQixRQUE3QixFQUF1QztBQUNyQyxzQkFBSSxPQUFKLENBQVksTUFBWjtBQUNEO0FBQ0Y7QUFDRixDQVBEOzs7OztBQ1pBLElBQU0sSUFBSSxHQUFHLENBQ1gsUUFEVyxFQUVYLFdBRlcsRUFHWCxlQUhXLEVBSVgsVUFKVyxFQUtYLGNBTFcsRUFNWCxTQU5XLEVBT1gsV0FQVyxFQVFYLFFBUlcsRUFTWCxXQVRXLEVBVVgsZ0JBVlcsRUFXWCxTQVhXLEVBWVgsTUFaVyxFQWFYLE1BYlcsRUFjWCxlQWRXLEVBZVgsWUFmVyxFQWdCWCxTQWhCVyxFQWlCWCxTQWpCVyxFQWtCWCxNQWxCVyxFQW1CWCxlQW5CVyxFQW9CWCxZQXBCVyxFQXFCWCxTQXJCVyxDQUFiOztBQXdCQSxTQUFTLFNBQVQsR0FBc0I7QUFDcEIsTUFBTSxLQUFLLEdBQUcsSUFBZDs7QUFFQSxFQUFBLElBQUksQ0FBQyxPQUFMLENBQWEsVUFBVSxHQUFWLEVBQWU7QUFFMUIsSUFBQSxLQUFLLENBQUMsR0FBRCxDQUFMLEdBQWEsSUFBYjs7QUFFQSxRQUFJO0FBQ0YsVUFBSSxNQUFNLENBQUMsR0FBRCxDQUFWLEVBQWlCO0FBQ2YsUUFBQSxLQUFLLENBQUMsR0FBRCxDQUFMLEdBQWEsTUFBTSxDQUFDLEdBQUQsQ0FBbkI7QUFDRDtBQUNGLEtBSkQsQ0FJRSxPQUFPLENBQVAsRUFBVSxDQUFFOztBQUVkLFFBQUk7QUFDRixVQUFJLE1BQU0sQ0FBQyxHQUFELENBQVYsRUFBaUI7QUFDZixRQUFBLEtBQUssQ0FBQyxHQUFELENBQUwsR0FBYSxNQUFNLENBQUMsR0FBRCxDQUFuQjtBQUNEO0FBQ0YsS0FKRCxDQUlFLE9BQU8sQ0FBUCxFQUFVLENBQUU7O0FBRWQsUUFBSTtBQUNGLFVBQUksT0FBTyxDQUFDLEdBQUQsQ0FBWCxFQUFrQjtBQUNoQixRQUFBLEtBQUssQ0FBQyxHQUFELENBQUwsR0FBYSxPQUFPLENBQUMsR0FBRCxDQUFwQjtBQUNEO0FBQ0YsS0FKRCxDQUlFLE9BQU8sQ0FBUCxFQUFVLENBQUU7O0FBQ2QsUUFBSTtBQUNGLE1BQUEsS0FBSyxDQUFDLEdBQU4sR0FBWSxPQUFPLENBQUMsU0FBUixDQUFrQixHQUFsQixDQUFaO0FBQ0QsS0FGRCxDQUVFLE9BQU8sQ0FBUCxFQUFVLENBQUU7QUFDZixHQXhCRDs7QUEwQkEsTUFBSTtBQUNGLFFBQUksT0FBTyxJQUFJLE9BQU8sQ0FBQyxPQUF2QixFQUFnQztBQUM5QixXQUFLLE9BQUwsR0FBZSxPQUFPLENBQUMsT0FBdkI7QUFDRDtBQUNGLEdBSkQsQ0FJRSxPQUFPLENBQVAsRUFBVSxDQUFFOztBQUVkLE1BQUk7QUFDRixRQUFJLE9BQU8sSUFBSSxPQUFPLENBQUMsYUFBdkIsRUFBc0M7QUFDcEMsV0FBSyxhQUFMLEdBQXFCLE9BQU8sQ0FBQyxhQUE3QjtBQUNEO0FBQ0YsR0FKRCxDQUlFLE9BQU8sQ0FBUCxFQUFVLENBQUU7QUFFZjs7QUFFRCxNQUFNLENBQUMsT0FBUCxHQUFpQixJQUFJLFNBQUosRUFBakIiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCIndXNlIHN0cmljdCc7XG5cbmltcG9ydCBleHQgZnJvbSBcIi4vdXRpbHMvZXh0XCI7XG5cbnZhciBMSVZFUkVMT0FEX0hPU1QgPSAnbG9jYWxob3N0Oic7XG52YXIgTElWRVJFTE9BRF9QT1JUID0gMzU3Mjk7XG52YXIgY29ubmVjdGlvbiA9IG5ldyBXZWJTb2NrZXQoJ3dzOi8vJyArIExJVkVSRUxPQURfSE9TVCArIExJVkVSRUxPQURfUE9SVCArICcvbGl2ZXJlbG9hZCcpO1xuXG5jb25uZWN0aW9uLm9uZXJyb3IgPSBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgY29uc29sZS5sb2coJ3JlbG9hZCBjb25uZWN0aW9uIGdvdCBlcnJvcjonLCBlcnJvcik7XG59O1xuXG5jb25uZWN0aW9uLm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChlKSB7XG4gIGlmIChlLmRhdGEpIHtcbiAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2UoZS5kYXRhKTtcbiAgICBpZiAoZGF0YSAmJiBkYXRhLmNvbW1hbmQgPT09ICdyZWxvYWQnKSB7XG4gICAgICBleHQucnVudGltZS5yZWxvYWQoKTtcbiAgICB9XG4gIH1cbn07IiwiY29uc3QgYXBpcyA9IFtcbiAgJ2FsYXJtcycsXG4gICdib29rbWFya3MnLFxuICAnYnJvd3NlckFjdGlvbicsXG4gICdjb21tYW5kcycsXG4gICdjb250ZXh0TWVudXMnLFxuICAnY29va2llcycsXG4gICdkb3dubG9hZHMnLFxuICAnZXZlbnRzJyxcbiAgJ2V4dGVuc2lvbicsXG4gICdleHRlbnNpb25UeXBlcycsXG4gICdoaXN0b3J5JyxcbiAgJ2kxOG4nLFxuICAnaWRsZScsXG4gICdub3RpZmljYXRpb25zJyxcbiAgJ3BhZ2VBY3Rpb24nLFxuICAncnVudGltZScsXG4gICdzdG9yYWdlJyxcbiAgJ3RhYnMnLFxuICAnd2ViTmF2aWdhdGlvbicsXG4gICd3ZWJSZXF1ZXN0JyxcbiAgJ3dpbmRvd3MnLFxuXVxuXG5mdW5jdGlvbiBFeHRlbnNpb24gKCkge1xuICBjb25zdCBfdGhpcyA9IHRoaXNcblxuICBhcGlzLmZvckVhY2goZnVuY3Rpb24gKGFwaSkge1xuXG4gICAgX3RoaXNbYXBpXSA9IG51bGxcblxuICAgIHRyeSB7XG4gICAgICBpZiAoY2hyb21lW2FwaV0pIHtcbiAgICAgICAgX3RoaXNbYXBpXSA9IGNocm9tZVthcGldXG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge31cblxuICAgIHRyeSB7XG4gICAgICBpZiAod2luZG93W2FwaV0pIHtcbiAgICAgICAgX3RoaXNbYXBpXSA9IHdpbmRvd1thcGldXG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge31cblxuICAgIHRyeSB7XG4gICAgICBpZiAoYnJvd3NlclthcGldKSB7XG4gICAgICAgIF90aGlzW2FwaV0gPSBicm93c2VyW2FwaV1cbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7fVxuICAgIHRyeSB7XG4gICAgICBfdGhpcy5hcGkgPSBicm93c2VyLmV4dGVuc2lvblthcGldXG4gICAgfSBjYXRjaCAoZSkge31cbiAgfSlcblxuICB0cnkge1xuICAgIGlmIChicm93c2VyICYmIGJyb3dzZXIucnVudGltZSkge1xuICAgICAgdGhpcy5ydW50aW1lID0gYnJvd3Nlci5ydW50aW1lXG4gICAgfVxuICB9IGNhdGNoIChlKSB7fVxuXG4gIHRyeSB7XG4gICAgaWYgKGJyb3dzZXIgJiYgYnJvd3Nlci5icm93c2VyQWN0aW9uKSB7XG4gICAgICB0aGlzLmJyb3dzZXJBY3Rpb24gPSBicm93c2VyLmJyb3dzZXJBY3Rpb25cbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHt9XG5cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgRXh0ZW5zaW9uKCk7Il19"}